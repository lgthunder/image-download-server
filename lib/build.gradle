import java.lang.reflect.Type

apply plugin: 'java-library'
apply plugin: 'java-library'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'


buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        //5.0.0 需要gradle 5.0+ 才可构建
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.0'
    }
}

def name = 'proxy'
def ver = 'v1.0'

def outdir = 'E:\\proxy-win\\'
//def outdir = 'build\\libs\\test\\'
def jar_dir = "build\\libs\\" + name + "-" + ver + ".jar"

task deleteJar() {
    delete(jar_dir)
}
shadowJar.dependsOn deleteJar

shadowJar {
    delete("build\\libs\\" + baseName + "-" + version + ".jar ")
    manifest {
        //main 函数地址类
        attributes 'Main-Class': 'test.java.com.github.monkeywie.proxyee.Main'
    }
    baseName = name
    classifier = null
    version = ver
    dependencies {
        //需要依赖的第三方lib
//        include(dependency('commons-cli:commons-cli:1.4'))
        //多个
//        include(dependency('com.alibaba:fastjson:1.2.58'))
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.java-websocket:Java-WebSocket:1.5.1"
    api 'com.squareup.retrofit2:converter-gson:2.1.0'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'io.netty:netty-all:4.1.25.Final'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.58'
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

compileJava {
    sourceCompatibility = "8"
    targetCompatibility = "8"
}


task copyFile(type: Copy) {
    from jar_dir
    into(outdir)
}

shadowJar.finalizedBy(copyFile)


